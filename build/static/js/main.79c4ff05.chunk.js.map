{"version":3,"sources":["logo--en.svg","components/Header/Header.js","components/Table/Table.js","components/Info/InfoBlock.js","components/Message/MessageBlock.js","components/Chart/InfoItem.js","components/Chart/Chart.js","components/MainTable/Title.js","components/MainTable/LastRowItem.js","components/MainTable/MainTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","className","alignLinks","brand","src","logo","alt","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","fixed","active","duration","onShow","responsiveThreshold","Infinity","swipeable","title","data-field","width","cell1","cell2","cell3","map","item","max","min","name","step","small","value","mark","subtitle","series","data","chart","height","type","annotations","yaxis","y","y2","borderColor","fillColor","opacity","label","style","fontSize","color","background","xaxis","x","strokeDashArray","points","marker","size","strokeColor","radius","cssClass","offsetY","dataLabels","enabled","stroke","curve","grid","padding","right","left","labels","info","note","multiple","onChange","val","console","log","target","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","InfoItem","values","colSpan","recomend","res","i","push","renderHeader","Title","LastRowItem","App","Header","s","m","l","xl","MainTable","Chart","Table","InfoBlock","MessageBlock","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79c4ff05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo--en.4555ff1d.svg\";","import React from 'react';\r\nimport logo from '../../logo--en.svg';\r\nimport {Navbar, Icon, Tab, Tabs} from 'react-materialize'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport './HeaderStyle.css'\r\nimport 'materialize-css';\r\n\r\nexport default () => (\r\n    <Navbar\r\n        className={\"App-header\"}\r\n        alignLinks=\"right\"\r\n        brand={<img src={logo} className=\"App-logo\" alt=\"logo\" />}\r\n        id=\"mobile-nav\"\r\n        menuIcon={<Icon className={\"header__menu\"}>menu</Icon>}\r\n        options={{\r\n            draggable: true,\r\n            edge: 'left',\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            outDuration: 200,\r\n            preventScrolling: true,\r\n            fixed: true\r\n        }}\r\n    >\r\n        <Tabs className=\"header__menu-buttons\">\r\n            <Tab\r\n                active\r\n                options={{\r\n                    duration: 300,\r\n                    onShow: null,\r\n                    responsiveThreshold: Infinity,\r\n                    swipeable: true\r\n                }}\r\n                title=\"Рекомендации\"\r\n            />\r\n            <Tab\r\n                options={{\r\n                    duration: 300,\r\n                    onShow: null,\r\n                    responsiveThreshold: Infinity,\r\n                    swipeable: true\r\n                }}\r\n                title=\"История\"\r\n            />\r\n        </Tabs>\r\n    </Navbar>\r\n)","import React from 'react';\r\nimport {Table, Card} from 'react-materialize'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css';\r\nimport './TableStyle.css'\r\n\r\nexport default () => {\r\n    const data = [\r\n        {cell1: 'Г', cell2: 20, cell3: 20},\r\n        {cell1: 'Ю', cell2: 10, cell3: 15},\r\n        {cell1: 'З', cell2: 25, cell3: 35},\r\n        {cell1: 'С', cell2: 40, cell3: 25},\r\n        {cell1: 'Э 48', cell2: 5, cell3: 5}\r\n    ];\r\n\r\n    return (<Card className={'table__card'}>\r\n        <div className={'table__title'}>Характеристики руды, %</div>\r\n        <Table className={'table__main'}>\r\n            <thead>\r\n            <tr>\r\n                <th data-field=\"id\" width={100}>ПО</th>\r\n                <th data-field=\"name\" width={100}>\r\n                    <div className={'table__head-label'}>текущее</div>\r\n                    <div>63,97</div>\r\n                </th>\r\n                <th data-field=\"price\" width={100}>\r\n                    <div className={'table__head-label'}>через 1 час</div>\r\n                    <div>64,23</div>\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                data.map((item) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>\r\n                                { item.cell1 }\r\n                            </td>\r\n                            <td>\r\n                                { item.cell2 }\r\n                            </td>\r\n                            <td>\r\n                                { item.cell3 }\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <tr>\r\n                <td>...</td>\r\n                <td>-</td>\r\n                <td>-</td>\r\n            </tr>\r\n            </tbody>\r\n        </Table>\r\n    </Card>)\r\n}","import React from 'react';\r\nimport {Card, Range} from 'react-materialize'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css';\r\nimport './InfoStyle.css'\r\n\r\nexport default () => (\r\n    <Card className='info__card'>\r\n        <div className={'info__wrap'}>\r\n            <div className={'info__left-side'}>\r\n                <div className={'title1'}>Руда</div>\r\n                <div className={'title2'}>250 т/ч</div>\r\n            </div>\r\n            <div className={'info__right-side'}>\r\n                <div className=\"info__badge white-text\">-5</div>\r\n                <div className='info__label red-text'>255 план час</div>\r\n            </div>\r\n        </div>\r\n        <div className={'info__range'}>\r\n            <Range\r\n                max=\"100\"\r\n                min=\"0\"\r\n                name=\"points\"\r\n                step=\"0.5\"\r\n            />\r\n        </div>\r\n        <div className={'info__wrap'}>\r\n            <div className='info__label'>45 900 план смены</div>\r\n            <div className='info__label red-text'>98% прогноз</div>\r\n        </div>\r\n    </Card>\r\n)","import React from 'react';\r\nimport {Icon, Card, Button} from 'react-materialize'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css';\r\nimport './MessageStyle.css'\r\n\r\nexport default () => (\r\n    <Card className={'message__wrap'}>\r\n        <div className={'message__title'}>\r\n            <div className={'message__title_left'}>\r\n                <Icon className={'message__icon'}>error</Icon>\r\n                <span>Уведомление</span>\r\n            </div>\r\n            <span>10:15</span>\r\n        </div>\r\n        <div className={'message__text'}>Поступила новая рекомендация</div>\r\n        <div className={'message__bt-block'}>\r\n            <Button small className={'button__ok'}>Ok</Button>\r\n        </div>\r\n    </Card>\r\n)","import React from 'react';\r\nimport './ChartStyle.css'\r\n\r\nexport default ({value, mark, subtitle}) => (\r\n    <div className={`chart__info-item ${mark}`}>\r\n        <div>{value}</div>\r\n        <div className={'subtitle'}>{subtitle}</div>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card, Select} from 'react-materialize'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport './ChartStyle.css'\r\nimport InfoItem from \"./InfoItem\";\r\n\r\nconst series = [\r\n    {\r\n        // name: \"Cases\",\r\n        data: [\r\n            61.9,\r\n            61.1,\r\n            61.4,\r\n            61.71,\r\n            61.21,\r\n            61.42,\r\n            61.33,\r\n            61.23,\r\n            61.73,\r\n            61.65,\r\n            61.45,\r\n            61.25,\r\n        ],\r\n    }\r\n];\r\n\r\nconst options = {\r\n    chart: {\r\n        height: 350,\r\n        type: 'line',\r\n        id: 'areachart-2'\r\n    },\r\n\r\n    annotations: {\r\n        yaxis: [{\r\n            y: 61,\r\n            y2: 62,\r\n            borderColor: '#000',\r\n            fillColor: '#e3a0a1',\r\n            opacity: 0.2,\r\n            label: {\r\n                borderColor: '#333',\r\n                style: {\r\n                    fontSize: '10px',\r\n                    color: '#333',\r\n                    background: '#e3a0a1',\r\n                },\r\n                // text: 'Y-axis range',\r\n            }\r\n        }, {\r\n            y: 61.2,\r\n            y2: 61.6,\r\n            borderColor: '#000',\r\n            fillColor: '#00E396',\r\n            opacity: 0.2,\r\n            label: {\r\n                borderColor: '#333',\r\n                style: {\r\n                    fontSize: '10px',\r\n                    color: '#333',\r\n                    background: '#00E396',\r\n                },\r\n                // text: 'Y-axis range',\r\n            }\r\n        }],\r\n        xaxis: [{\r\n            x: 8,\r\n            strokeDashArray: 0,\r\n            borderColor: '#775DD0',\r\n            label: {\r\n                borderColor: '#775DD0',\r\n                style: {\r\n                    color: '#fff',\r\n                    background: '#775DD0',\r\n                },\r\n                // text: 'Anno Test',\r\n            }\r\n        },\r\n        // {\r\n        //     x: 2,\r\n        //     x2: 4,\r\n        //     fillColor: '#B3F7CA',\r\n        //     opacity: 0.4,\r\n        //     label: {\r\n        //         borderColor: '#B3F7CA',\r\n        //         style: {\r\n        //             fontSize: '10px',\r\n        //             color: '#fff',\r\n        //             background: '#00E396',\r\n        //         },\r\n        //         offsetY: -10,\r\n        //         text: 'X-axis range',\r\n        //     }\r\n        // }\r\n        ],\r\n        points: [{\r\n            x: 4,\r\n            y: 61.71,\r\n            marker: {\r\n                size: 4,\r\n                fillColor: '#fff',\r\n                strokeColor: 'red',\r\n                radius: 1,\r\n                cssClass: 'apexcharts-custom-class'\r\n            },\r\n            label: {\r\n                borderColor: '#FF4560',\r\n                offsetY: 0,\r\n                style: {\r\n                    color: '#fff',\r\n                    background: '#FF4560',\r\n                },\r\n\r\n                // text: 'Point Annotation',\r\n            }\r\n        }, {\r\n            x: 2,\r\n            y: 61.1,\r\n            marker: {\r\n                size: 4,\r\n                fillColor: '#fff',\r\n                strokeColor: 'red',\r\n                radius: 2,\r\n                cssClass: 'apexcharts-custom-class'\r\n            },\r\n            // image: {\r\n            //     path: '../../assets/images/ico-instagram.png'\r\n            // }\r\n        }, {\r\n            x: 5,\r\n            y: 61.21,\r\n            marker: {\r\n                size: 4,\r\n                fillColor: '#fff',\r\n                strokeColor: 'green',\r\n                radius: 2,\r\n                cssClass: 'apexcharts-custom-class'\r\n            },\r\n            // image: {\r\n            //     path: '../../assets/images/ico-instagram.png'\r\n            // }\r\n        }]\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'straight'\r\n    },\r\n    grid: {\r\n        padding: {\r\n            right: 30,\r\n            left: 20\r\n        }\r\n    },\r\n    title: {\r\n        // text: 'Line with Annotations',\r\n        // align: 'left'\r\n    },\r\n    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\r\n    xaxis: {\r\n        type: 'number',\r\n    },\r\n};\r\n\r\nconst info = [\r\n    {value: 61.1, mark: 'err', note: 'факт 9:00'},\r\n    {value: 61.8, mark: 'pass', note: 'прогноз'},\r\n    {value: 61.0, mark: 'pass', note: 'прогноз'},\r\n    {value: 61.5, mark: 'pass', note: 'прогноз'},\r\n    {value: 61.4, mark: 'pass', note: 'среднее'},\r\n];\r\n\r\nexport default () => (\r\n    <Card>\r\n        <div className={'chart__title-wrap'}>\r\n            <div className={'chart__title'}>Содержание металла в концентрате, %</div>\r\n            <div className={'chart__select'}>\r\n                <Select\r\n                    className={'chart__select'}\r\n                    id=\"Select-9\"\r\n                    multiple={false}\r\n                    onChange={function noRefCheck(val){console.log(val.target.value)}}\r\n                    options={{\r\n                        classes: '',\r\n                        dropdownOptions: {\r\n                            alignment: 'left',\r\n                            autoTrigger: true,\r\n                            closeOnClick: true,\r\n                            constrainWidth: true,\r\n                            coverTrigger: true,\r\n                            hover: false,\r\n                            inDuration: 150,\r\n                            onCloseEnd: null,\r\n                            onCloseStart: null,\r\n                            onOpenEnd: null,\r\n                            onOpenStart: null,\r\n                            outDuration: 250\r\n                        }\r\n                    }}\r\n                    value=\"1\"\r\n                >\r\n                    <option value=\"1\">Fe (общ)</option>\r\n                    <option value=\"2\">Cu (общ)</option>\r\n                    <option value=\"3\">Zn (общ)</option>\r\n                </Select>\r\n            </div>\r\n        </div>\r\n        <div className={'chart__info'}>\r\n            {\r\n                info.map(item => {\r\n                    return (\r\n                        <InfoItem value={item.value} mark={item.mark} subtitle={item.note} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n        <ReactApexChart options={options} series={series} type=\"line\" height={250} />\r\n    </Card>\r\n)","import React from 'react';\r\n\r\nexport default ({title, subtitle}) => (\r\n    <td>\r\n        <div className={'table__my-title'}>{title}</div>\r\n        <div className={'table__my-subtitle'}>{subtitle}</div>\r\n    </td>\r\n)","import React from 'react';\r\n\r\nexport default ({title, values, classes}) => (\r\n    <td colSpan={3}>\r\n        <div className={`item__wrap ${classes}`}>\r\n            <div className={'item__title'}>{title}</div>\r\n            <div>\r\n                {\r\n                    values.map(item => <div className={typeof(item) == 'string' ? 'item__label' : 'item__selection'}>{item}</div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    </td>\r\n)","import React from 'react';\r\nimport {Table, Icon, Card, Select} from 'react-materialize'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css';\r\nimport './MainTableStyle.css'\r\nimport Title from \"./Title\";\r\nimport LastRowItem from \"./LastRowItem\";\r\n\r\nconst renderHeader = () => {\r\n    let res = [];\r\n\r\n    for (let i = 0; i < 15; i++) {\r\n        res.push(<th>{i + 1}</th>);\r\n    }\r\n\r\n    return res;\r\n};\r\n\r\nexport default () => {\r\n    const data = [193, 193, 193, 193, 193, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197];\r\n    const recomend = [13, 13, 19, 19, 13, 17, 17, 1, 17, 1, 197, 197, 197, 17, 17, 17, 197];\r\n\r\n    return (<Card className={'table__my-wrap'}>\r\n        <Table className={'table__my'}>\r\n            <thead>\r\n            <tr>\r\n                <th data-field=\"id\">\r\n                    Секции\r\n                </th>\r\n                <th data-field=\"name\">\r\n                    Бедный\r\n                </th>\r\n                <th data-field=\"price\">\r\n                    Богатый\r\n                </th>\r\n                {\r\n                    renderHeader()\r\n                }\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <Title title={'Нагрузка на МСЦ'} subtitle={'рекомендация'}/>\r\n                {\r\n                    data.map((item, i) => {\r\n                        return (\r\n                            <td className={ i === 1 ? 'selected' : ''}>\r\n                                <div className={'value'}>{item}</div>\r\n                                <div className={'recommend-value'}>{recomend[i]}</div>\r\n                            </td>\r\n                        )\r\n                    })\r\n                }\r\n            </tr>\r\n            <tr>\r\n                <Title title={'Руда/вода'} subtitle={'рекомендация'}/>\r\n                {\r\n                    data.map((item, i) => {\r\n                        return (\r\n                            <td className={ i === 1 ? 'selected' : ''}>\r\n                                <div className={i === 0 ? 'value warn' : 'value'}>{item}</div>\r\n                                <div className={i === 0 ? 'recommend-value info' : 'recommend-value'}>{recomend[i]}</div>\r\n                            </td>\r\n                        )\r\n                    })\r\n                }\r\n            </tr>\r\n            <tr>\r\n                <Title title={'Работа доп. МШ'} subtitle={'рекомендация'}/>\r\n                {\r\n                    data.map((item, i) => {\r\n                        return (\r\n                            <td className={ i === 1 ? 'selected' : ''}>\r\n                                <div className={'value'}>{item}</div>\r\n                                <div className={'recommend-value'}>{recomend[i]}</div>\r\n                            </td>\r\n                        )\r\n                    })\r\n                }\r\n            </tr>\r\n            <tr>\r\n                <Title title={'Доп. режимы'} subtitle={'рекомендация'}/>\r\n                <td></td>\r\n                <td></td>\r\n                { <LastRowItem title={'Насос 802'} values={['да', 'нет']} /> }\r\n\r\n                <td></td>\r\n                { <LastRowItem title={'Насос 163'} values={['нет', 'нет']} /> }\r\n\r\n                <td></td>\r\n                { <LastRowItem title={'Насос 13'} values={['нет', 'нет']} /> }\r\n\r\n                <td></td>\r\n                { <LastRowItem classes={'selection'} title={'Насос 105'} values={[\r\n                    <Select\r\n                        id=\"Select-9\"\r\n                        multiple={false}\r\n                        onChange={function noRefCheck(){}}\r\n                        options={{\r\n                            classes: '',\r\n                            dropdownOptions: {\r\n                                alignment: 'left',\r\n                                autoTrigger: true,\r\n                                closeOnClick: true,\r\n                                constrainWidth: true,\r\n                                coverTrigger: true,\r\n                                hover: false,\r\n                                inDuration: 150,\r\n                                onCloseEnd: null,\r\n                                onCloseStart: null,\r\n                                onOpenEnd: null,\r\n                                onOpenStart: null,\r\n                                outDuration: 250\r\n                            }\r\n                        }}\r\n                        value=\"1\"\r\n                    >\r\n                        <option value=\"1\">на 3-97</option>\r\n                        <option value=\"2\">на 6-103</option>\r\n                        <option value=\"3\">на 9-106</option>\r\n                    </Select>\r\n                ]} /> }\r\n            </tr>\r\n            </tbody>\r\n        </Table>\r\n        <div className={'table__bottom'}>\r\n            <div className={'table__bottom-left'}>\r\n                <span>10:15</span>\r\n                <span>Рекомендация обновлена</span>\r\n            </div>\r\n            <div className={'table__bottom-right'}>\r\n                <span>Посмотреть историю</span>\r\n                <Icon>play_circle_outline</Icon>\r\n            </div>\r\n        </div>\r\n    </Card>)\r\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport {Col, Row} from \"react-materialize\";\nimport Table from \"./components/Table/Table\";\nimport InfoBlock from \"./components/Info/InfoBlock\";\nimport MessageBlock from \"./components/Message/MessageBlock\";\nimport Chart from \"./components/Chart/Chart\";\nimport MainTable from \"./components/MainTable/MainTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <div className={\"app__content\"}>\n            <Row>\n                <Col s={12} m={12} l={12} xl={12}>\n                    <MainTable />\n                </Col>\n            </Row>\n            <Row>\n                <Col s={12} m={12} l={6} xl={6}>\n                    <Chart/>\n                </Col>\n                <Col s={12} m={12} l={6} xl={3}>\n                    <Table/>\n                </Col>\n                <Col s={12} m={12} l={6} xl={3}>\n                    <InfoBlock />\n                    <MessageBlock />\n                </Col>\n            </Row>\n        </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}